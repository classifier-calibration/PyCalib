
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/visualisations/xmpl_ternary_samples.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_visualisations_xmpl_ternary_samples.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_visualisations_xmpl_ternary_samples.py:


=============================
Plotting reliability diagrams
=============================

This example illustrates how to visualise the reliability diagram for a binary
probabilistic classifier.

.. GENERATED FROM PYTHON SOURCE LINES 9-15

.. code-block:: default

    # Author: Miquel Perello Nieto <miquel.perellonieto@bristol.ac.uk>
    # License: new BSD

    print(__doc__)
    SAVEFIGS=False








.. GENERATED FROM PYTHON SOURCE LINES 16-21

This example shows different ways to visualise the reliability diagram for a
binary classification problem.

First we will generate two synthetic models and some synthetic scores and
labels.

.. GENERATED FROM PYTHON SOURCE LINES 21-47

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np
    np.random.seed(42)

    n_c1 = n_c2 = n_c3 = 300
    p = np.concatenate((np.random.dirichlet([6, 2, 3], n_c1),
                        np.random.dirichlet([5, 12, 5], n_c2),
                        np.random.dirichlet([2, 3, 5], n_c3)
                       ))

    y = np.concatenate((np.zeros(n_c1), np.ones(n_c2), np.ones(n_c3)*2))

    from pycalib.visualisations.ternary import draw_tri_samples

    fig, ax = draw_tri_samples(p, classes=y, alpha=0.6)

    if SAVEFIGS:
        fig.savefig('fig1.png')

    fig, ax = draw_tri_samples(p, classes=y, alpha=0.6,
                               labels=['dogs', 'cats', 'fox'],
                               color_list=['saddlebrown', 'black', 'darkorange'])

    if SAVEFIGS:
        fig.savefig('fig2.png')



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /examples/visualisations/images/sphx_glr_xmpl_ternary_samples_001.png
          :alt: xmpl ternary samples
          :class: sphx-glr-multi-img

    *

      .. image:: /examples/visualisations/images/sphx_glr_xmpl_ternary_samples_002.png
          :alt: xmpl ternary samples
          :class: sphx-glr-multi-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.239 seconds)


.. _sphx_glr_download_examples_visualisations_xmpl_ternary_samples.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/perellonieto/pycalib/gh-pages?filepath=notebooks/examples/visualisations/xmpl_ternary_samples.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: xmpl_ternary_samples.py <xmpl_ternary_samples.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: xmpl_ternary_samples.ipynb <xmpl_ternary_samples.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
